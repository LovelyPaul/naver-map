-- Migration: Create reviews table for user-generated reviews
-- Description: Stores reviews written by users without login (password-protected for edit/delete)
-- Author: Generated by database.md specification
-- Date: 2025-10-22

BEGIN;

-- Create reviews table
CREATE TABLE IF NOT EXISTS public.reviews (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  place_id UUID NOT NULL,
  author_name VARCHAR(100) NOT NULL,
  author_email VARCHAR(200) NULL,
  rating SMALLINT NOT NULL,
  content TEXT NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

  -- Foreign key constraint
  CONSTRAINT fk_reviews_place_id
    FOREIGN KEY (place_id)
    REFERENCES public.places(id)
    ON DELETE CASCADE,

  -- Constraints
  CONSTRAINT chk_rating_range
    CHECK (rating >= 1 AND rating <= 5),

  CONSTRAINT chk_content_length
    CHECK (LENGTH(content) >= 1 AND LENGTH(content) <= 500),

  CONSTRAINT chk_author_name_length
    CHECK (LENGTH(TRIM(author_name)) >= 2),

  CONSTRAINT chk_email_format
    CHECK (
      author_email IS NULL OR
      author_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
    )
);

-- Add table comment
COMMENT ON TABLE public.reviews IS '사용자가 작성한 리뷰 정보. 로그인 없이 사용 가능하며, 비밀번호로 수정/삭제 권한 관리.';

-- Add column comments
COMMENT ON COLUMN public.reviews.id IS '리뷰 고유 ID (UUID)';
COMMENT ON COLUMN public.reviews.place_id IS '장소 참조 (places 테이블 FK)';
COMMENT ON COLUMN public.reviews.author_name IS '작성자 닉네임 (최소 2자)';
COMMENT ON COLUMN public.reviews.author_email IS '작성자 이메일 (선택, 형식 검증)';
COMMENT ON COLUMN public.reviews.rating IS '평점 (1-5)';
COMMENT ON COLUMN public.reviews.content IS '리뷰 내용 (최대 500자)';
COMMENT ON COLUMN public.reviews.password_hash IS '수정/삭제용 비밀번호 해시 (bcrypt)';
COMMENT ON COLUMN public.reviews.created_at IS '작성일시';
COMMENT ON COLUMN public.reviews.updated_at IS '수정일시';

-- Create indexes
-- Index for place-specific review queries (most common query pattern)
CREATE INDEX IF NOT EXISTS idx_reviews_place_id ON public.reviews(place_id);

-- Composite index for place + created_at (optimized for "latest reviews per place" queries)
CREATE INDEX IF NOT EXISTS idx_reviews_place_created ON public.reviews(place_id, created_at DESC);

-- Index for latest reviews sorting
CREATE INDEX IF NOT EXISTS idx_reviews_created_at ON public.reviews(created_at DESC);

-- Disable Row Level Security (as per CLAUDE.md guidelines)
ALTER TABLE public.reviews DISABLE ROW LEVEL SECURITY;

COMMIT;
