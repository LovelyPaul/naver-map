-- Migration: Create places table for restaurant/place information
-- Description: Stores basic information about restaurants/places from Naver Local Search API
-- Author: Generated by database.md specification
-- Date: 2025-10-22

-- Ensure pgcrypto is available (should already exist from 0001)
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

BEGIN;

-- Create places table
CREATE TABLE IF NOT EXISTS public.places (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  naver_place_id VARCHAR(100) UNIQUE NOT NULL,
  name VARCHAR(200) NOT NULL,
  address VARCHAR(500) NOT NULL,
  category_main VARCHAR(50) NOT NULL,
  category_sub VARCHAR(50) NULL,
  latitude DECIMAL(10, 8) NOT NULL,
  longitude DECIMAL(11, 8) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

  -- Constraints
  CONSTRAINT chk_latitude_range CHECK (latitude >= -90 AND latitude <= 90),
  CONSTRAINT chk_longitude_range CHECK (longitude >= -180 AND longitude <= 180),
  CONSTRAINT chk_category_length CHECK (LENGTH(TRIM(category_main)) >= 2)
);

-- Add table comment
COMMENT ON TABLE public.places IS '맛집/장소의 기본 정보를 저장. 네이버 Local Search API에서 검색된 결과를 저장하며, naver_place_id로 중복 방지.';

-- Add column comments
COMMENT ON COLUMN public.places.id IS '내부 고유 ID (UUID)';
COMMENT ON COLUMN public.places.naver_place_id IS '네이버 장소 고유 ID (중복 방지용)';
COMMENT ON COLUMN public.places.name IS '장소명 (식당명)';
COMMENT ON COLUMN public.places.address IS '주소';
COMMENT ON COLUMN public.places.category_main IS '대분류 카테고리 (예: 한식)';
COMMENT ON COLUMN public.places.category_sub IS '소분류 카테고리 (예: 소고기 구이)';
COMMENT ON COLUMN public.places.latitude IS '위도 (-90 ~ 90)';
COMMENT ON COLUMN public.places.longitude IS '경도 (-180 ~ 180)';
COMMENT ON COLUMN public.places.created_at IS '생성일시';
COMMENT ON COLUMN public.places.updated_at IS '수정일시';

-- Create indexes
-- Index for fast lookup by naver_place_id (already UNIQUE, but explicit index for queries)
CREATE INDEX IF NOT EXISTS idx_places_naver_place_id ON public.places(naver_place_id);

-- Index for map search optimization (latitude, longitude)
CREATE INDEX IF NOT EXISTS idx_places_location ON public.places(latitude, longitude);

-- Index for category filtering
CREATE INDEX IF NOT EXISTS idx_places_category ON public.places(category_main);

-- Disable Row Level Security (as per CLAUDE.md guidelines)
ALTER TABLE public.places DISABLE ROW LEVEL SECURITY;

COMMIT;
